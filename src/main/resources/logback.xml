<?xml version="1.0" encoding="utf-8"?>
<configuration>
    <!-- 属性文件:在配置文件中找到对应的配置项 -->
    <!--<springProperty scope="context" name="logPath" source="logging.path"/>-->
    <property name="logPath" value="/Users/li/IdeaProjects/my/team-account/target"/>

    <!-- 输出到控制台 -->
    <appender name="CONSOLE-LOG" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>[%d{yyyy-MM-dd' 'HH:mm:ss.sss}] [%C] [%t] [%L] [%-5p] %m%n</pattern>
        </layout>
    </appender>

    <!-- 获取比info级别高(包括info级别)但除error级别的日志 -->
    <appender name="INFO-LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 指定过滤策略 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <encoder>
            <!-- 指定日志输出格式 -->
            <pattern>[%d{yyyy-MM-dd' 'HH:mm:ss.sss}] [%C] [%t] [%L] [%-5p] %m%n</pattern>
        </encoder>

        <!-- 指定收集策略：滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--路径-->
            <fileNamePattern>${logPath}/%d{yyyy-MM-dd}/info.%i.log</fileNamePattern>
            <!--保存的时间（天数）-->
            <maxHistory>30</maxHistory>
            <!--日志文件的总大小-->
            <totalSizeCap>10GB</totalSizeCap>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <appender name="ERROR-LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 指定过滤策略 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <encoder>
            <!-- 指定日志输出格式 -->
            <pattern>[%d{yyyy-MM-dd' 'HH:mm:ss.sss}] [%C] [%t] [%L] [%-5p] %m%n</pattern>
        </encoder>
        <!-- 指定收集策略：滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--指定生成日志保存地址 -->
            <fileNamePattern>${logPath}/%d{yyyy-MM-dd}/error.%i.log</fileNamePattern>
            <maxHistory>30</maxHistory>
            <!--日志文件的总大小-->
            <totalSizeCap>10GB</totalSizeCap>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <!-- 异步输出 -->
    <appender name="ASYNC-INFO" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>1024</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="INFO-LOG"/>
    </appender>

    <appender name="ASYNC-ERROR" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>1024</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="ERROR-LOG"/>
    </appender>


    <!--日志导出的到 Logstash-->
    <appender name="stash"
              class="net.logstash.logback.appender.LogstashTcpSocketAppender">
        <destination>localhost:9250</destination>
        <!-- encoder必须配置,有多种可选 -->
        <encoder charset="UTF-8"
                 class="net.logstash.logback.encoder.LogstashEncoder" >
            <!-- "appname":"ye_test" 的作用是指定创建索引的名字时用，并且在生成的文档中会多了这个字段  -->
            <customFields>{"appname":"team_account"}</customFields>
        </encoder>
    </appender>

<!--    <root level="INFO">-->
<!--        <appender-ref ref="stash"/>-->
<!--    </root>-->

<!--    <logger name="io.choerodon" level="DEBUG"/>-->
<!--    <logger name="org.hzero.cms" level="DEBUG"/>-->
<!--    <logger name="org.sys.platform.cms" level="DEBUG"/>-->
<!--    <logger name="org.hzero.mybatis" level="DEBUG"/>-->
<!--    <logger name="org.hzero.platform" level="DEBUG"/>-->
<!--    <logger name="org.hzero.starter" level="DEBUG"/>-->
<!--    <logger name="org.hzero.plugin.platform" level="DEBUG"/>-->
<!--    <logger name="java.sql.PreparedStatement" level="DEBUG"/>-->
<!--    <logger name="org.hibernate.SQL" level="DEBUG"/>-->
<!--    <logger name="org.quartz.core" level="INFO"/>-->
<!--    <logger name="org.apache.velocity" level="INFO"/>-->
<!--    <logger name="org.springframework" level="INFO"/>-->
<!--    <logger name="org.directwebremoting" level="INFO"/>-->
<!--    <logger name="org.apache.commons" level="INFO"/>-->
<!--    <logger name="org.mybatis" level="DEBUG"/>-->
<!--    <logger name="org.hibernate" level="INFO"/>-->
<!--    <logger name="org.apache.activemq" level="INFO"/>-->
<!--    <logger name="org.apache.kafka" level="INFO"/>-->
<!--    <logger name="com.opensymphony" level="INFO"/>-->
<!--    <logger name="com.mchange" level="INFO"/>-->
<!--    <logger name="java.sql.ResultSet" level="INFO"/>-->
<!--    <logger name="net.sf.ehcache.distribution" level="INFO"/>-->

    <!-- 指定最基础的日志输出级别 -->
    <root level="info">
        <appender-ref ref="CONSOLE-LOG"/>
        <appender-ref ref="INFO-LOG"/>
        <appender-ref ref="ERROR-LOG"/>
        <appender-ref ref="stash"/>
    </root>

</configuration>